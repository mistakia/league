{
  "name": "should create a query with prospect columns, weighted opportunity, and opportunity share",
  "description": "Test case for should create a query with prospect columns, weighted opportunity, and opportunity share",
  "request": {
    "columns": [
      {
        "column_id": "player_weighted_opportunity_from_plays",
        "params": {
          "years": [2023, 2022, 2021, 2020]
        }
      },
      {
        "column_id": "player_opportunity_share_from_plays"
      },
      {
        "column_id": "player_body_mass_index"
      },
      {
        "column_id": "player_speed_score"
      },
      {
        "column_id": "player_height_adjusted_speed_score"
      },
      {
        "column_id": "player_agility_score"
      },
      {
        "column_id": "player_burst_score"
      }
    ],
    "sort": [
      {
        "column_id": "player_weighted_opportunity_from_plays",
        "desc": true
      }
    ]
  },
  "expected_query": "with \"tb3e36120a917f58fcbf72b163549f606\" as (select COALESCE(bc_pid, trg_pid) as pid, ROUND(SUM(CASE WHEN nfl_plays.ydl_100 <= 20 AND bc_pid IS NOT NULL THEN 1.30 WHEN nfl_plays.ydl_100 <= 20 AND trg_pid IS NOT NULL THEN 2.25 WHEN nfl_plays.ydl_100 > 20 AND bc_pid IS NOT NULL THEN 0.48 WHEN nfl_plays.ydl_100 > 20 AND trg_pid IS NOT NULL THEN 1.43 ELSE 0 END), 2) as weighted_opportunity_from_plays from \"nfl_plays\" where not \"play_type\" = 'NOPL' and \"nfl_plays\".\"seas_type\" in ('REG') group by COALESCE(bc_pid, trg_pid)), \"td2b8e0d3ac807cd59229c712aefce1fd\" as (select \"pg\".\"pid\", ROUND(100.0 * (COUNT(CASE WHEN nfl_plays.bc_pid = pg.pid THEN 1 ELSE NULL END) + COUNT(CASE WHEN nfl_plays.trg_pid = pg.pid THEN 1 ELSE NULL END)) / NULLIF(SUM(CASE WHEN nfl_plays.bc_pid IS NOT NULL OR nfl_plays.trg_pid IS NOT NULL THEN 1 ELSE 0 END), 0), 2) as opportunity_share_from_plays from \"nfl_plays\" inner join \"player_gamelogs\" as \"pg\" on \"nfl_plays\".\"esbid\" = \"pg\".\"esbid\" and \"nfl_plays\".\"off\" = \"pg\".\"tm\" where not \"play_type\" = 'NOPL' and (\"bc_pid\" is not null or \"trg_pid\" is not null) and \"nfl_plays\".\"seas_type\" in ('REG') group by \"pg\".\"pid\") select \"player\".\"pid\", \"tb3e36120a917f58fcbf72b163549f606\".\"weighted_opportunity_from_plays\" AS \"weighted_opportunity_from_plays_0\", \"td2b8e0d3ac807cd59229c712aefce1fd\".\"opportunity_share_from_plays\" AS \"opportunity_share_from_plays_0\", CASE WHEN player.height > 0 THEN ROUND(CAST((player.weight::float / NULLIF(player.height::float * player.height::float, 0)) * 703 AS NUMERIC), 2) ELSE NULL END as bmi_0, CASE WHEN player.forty > 0 THEN ROUND((player.weight * 200.0) / NULLIF(POWER(player.forty, 4), 0), 2) ELSE NULL END as speed_score_0, CASE WHEN player.pos IN ('WR', 'TE') AND player.forty > 0 THEN ROUND(((player.weight * 200.0) / NULLIF(POWER(player.forty, 4), 0)) * (player.height / CASE WHEN player.pos = 'TE' THEN 76.4 ELSE 73.0 END), 2) ELSE NULL END as height_adjusted_speed_score_0, ROUND(COALESCE(player.shuttle, 0) + COALESCE(player.cone, 0), 2) as agility_score_0, ROUND(COALESCE(player.vertical, 0) + (COALESCE(player.broad, 0) / 12.0), 2) as burst_score_0, \"player\".\"pos\" from \"player\" left join \"tb3e36120a917f58fcbf72b163549f606\" on \"tb3e36120a917f58fcbf72b163549f606\".\"pid\" = \"player\".\"pid\" left join \"td2b8e0d3ac807cd59229c712aefce1fd\" on \"td2b8e0d3ac807cd59229c712aefce1fd\".\"pid\" = \"player\".\"pid\" group by \"tb3e36120a917f58fcbf72b163549f606\".\"weighted_opportunity_from_plays\", \"td2b8e0d3ac807cd59229c712aefce1fd\".\"opportunity_share_from_plays\", player.weight, player.height, player.weight, player.forty, player.weight, player.forty, player.height, player.pos, player.shuttle, player.cone, player.vertical, player.broad, \"player\".\"pid\", \"player\".\"lname\", \"player\".\"fname\", \"player\".\"pos\" order by 2 DESC NULLS LAST, \"player\".\"pid\" asc limit 500",
  "tags": ["parameters", "sorting", "cte"],
  "timeout_ms": 40000,
  "expected_metadata": {
    "cache_ttl": "six_hours",
    "cache_expire_at": null
  }
}
