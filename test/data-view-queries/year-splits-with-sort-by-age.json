{
  "name": "year splits with sort by age",
  "description": "Test case for year splits with sort by age",
  "request": {
    "columns": [
      "player_age",
      "player_ngs_draft_grade",
      {
        "column_id": "player_weighted_opportunity_rating_from_plays",
        "params": {
          "year": [2023, 2022, 2021, 2020, 2019, 2018, 2017]
        }
      },
      "player_espn_overall_score"
    ],
    "sort": [
      {
        "column_id": "player_age",
        "desc": true
      }
    ],
    "where": [
      {
        "column_id": "player_position",
        "operator": "IN",
        "value": ["WR"]
      }
    ],
    "prefix_columns": ["player_name"],
    "splits": ["year"]
  },
  "expected_query": "with \"base_years\" as (SELECT unnest(ARRAY[2017,2018,2019,2020,2021,2022,2023]) as year), \"player_years\" as (SELECT DISTINCT player.pid, base_years.year FROM player CROSS JOIN base_years WHERE player.pos IN ('WR')), \"t464657506048f9ec0ecfd251f6e32f1a\" as (select \"pg\".\"pid\", ROUND((1.5 * COUNT(CASE WHEN nfl_plays.trg_pid = pg.pid THEN 1 ELSE NULL END) / NULLIF(SUM(CASE WHEN trg_pid IS NOT NULL THEN 1 ELSE 0 END), 0)) + (0.7 * SUM(CASE WHEN nfl_plays.trg_pid = pg.pid THEN nfl_plays.dot ELSE 0 END) / NULLIF(SUM(nfl_plays.dot), 0)), 4) as weighted_opp_rating_from_plays, \"nfl_plays\".\"year\" from \"nfl_plays\" inner join \"player_gamelogs\" as \"pg\" on \"nfl_plays\".\"esbid\" = \"pg\".\"esbid\" and \"nfl_plays\".\"off\" = \"pg\".\"tm\" where not \"play_type\" = 'NOPL' and (\"trg_pid\" is not null) and \"nfl_plays\".\"year\" in (2017, 2018, 2019, 2020, 2021, 2022, 2023) and \"nfl_plays\".\"seas_type\" in ('REG') group by \"pg\".\"pid\", \"nfl_plays\".\"year\") select \"player\".\"pid\", player.fname, player.lname, \"player\".\"ngs_draft_grade\" AS \"ngs_draft_grade_0\", \"t464657506048f9ec0ecfd251f6e32f1a\".\"weighted_opp_rating_from_plays\" AS \"weighted_opp_rating_from_plays_0\", \"player_seasonlogs\".\"espn_overall_score\" AS \"espn_overall_score_0\", CASE WHEN player.dob IS NULL OR player.dob = '0000-00-00' THEN NULL ELSE ROUND(EXTRACT(YEAR FROM AGE(opening_days.opening_day, TO_DATE(player.dob, 'YYYY-MM-DD'))) + (EXTRACT(MONTH FROM AGE(opening_days.opening_day, TO_DATE(player.dob, 'YYYY-MM-DD'))) / 12.0) + (EXTRACT(DAY FROM AGE(opening_days.opening_day, TO_DATE(player.dob, 'YYYY-MM-DD'))) / 365.25), 2) END as age_0, \"player_years\".\"year\", \"player\".\"pos\" from \"player\" inner join \"player_years\" on \"player_years\".\"pid\" = \"player\".\"pid\" left join \"t464657506048f9ec0ecfd251f6e32f1a\" on \"t464657506048f9ec0ecfd251f6e32f1a\".\"pid\" = \"player\".\"pid\" and t464657506048f9ec0ecfd251f6e32f1a.year = player_years.year and t464657506048f9ec0ecfd251f6e32f1a.year IN (2017,2018,2019,2020,2021,2022,2023) left join \"player_seasonlogs\" on \"player_seasonlogs\".\"pid\" = \"player\".\"pid\" and player_seasonlogs.year = player_years.year and \"player_seasonlogs\".\"seas_type\" = 'REG' left join \"opening_days\" on \"opening_days\".\"year\" = \"player_years\".\"year\" where player.pos IN ('WR') group by player.fname, player.lname, \"player\".\"ngs_draft_grade\", \"t464657506048f9ec0ecfd251f6e32f1a\".\"weighted_opp_rating_from_plays\", \"player_seasonlogs\".\"espn_overall_score\", player.dob, opening_days.opening_day, \"player_years\".\"year\", \"player\".\"pid\", \"player\".\"lname\", \"player\".\"fname\", \"player\".\"pos\" order by 7 DESC NULLS LAST, \"player\".\"pid\" asc limit 500",
  "tags": ["filters", "parameters", "sorting", "cte", "joins"],
  "timeout_ms": 40000
}
