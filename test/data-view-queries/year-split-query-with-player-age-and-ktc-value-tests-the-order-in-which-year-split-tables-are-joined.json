{
  "name": "year split query with player age and ktc value, tests the order in which year split tables are joined",
  "description": "Test case for year split query with player age and ktc value, tests the order in which year split tables are joined",
  "request": {
    "columns": [
      "player_age",
      {
        "column_id": "player_fantasy_points_per_game_from_seasonlogs",
        "params": {
          "year": [2023, 2022, 2021, 2020, 2019, 2018, 2017]
        }
      },
      {
        "column_id": "player_weighted_opportunity_rating_from_plays",
        "params": {
          "year": [2023, 2022, 2021, 2020, 2019, 2018]
        }
      },
      "player_espn_overall_score",
      "player_keeptradecut_value"
    ],
    "sort": [
      {
        "column_id": "player_fantasy_points_per_game_from_seasonlogs",
        "desc": true,
        "column_index": 0
      }
    ],
    "where": [
      {
        "column_id": "player_position",
        "operator": "IN",
        "value": ["WR"]
      }
    ],
    "prefix_columns": ["player_name"],
    "splits": ["year"]
  },
  "expected_query": "with \"base_years\" as (SELECT unnest(ARRAY[2017,2018,2019,2020,2021,2022,2023]) as year), \"player_years\" as (SELECT DISTINCT player.pid, base_years.year FROM player CROSS JOIN base_years WHERE player.pos IN ('WR')), \"t5dbd24996205072a3cc6d6a4c4294224\" as (select \"pg\".\"pid\", ROUND((1.5 * COUNT(CASE WHEN nfl_plays.trg_pid = pg.pid THEN 1 ELSE NULL END) / NULLIF(SUM(CASE WHEN trg_pid IS NOT NULL THEN 1 ELSE 0 END), 0)) + (0.7 * SUM(CASE WHEN nfl_plays.trg_pid = pg.pid THEN nfl_plays.dot ELSE 0 END) / NULLIF(SUM(nfl_plays.dot), 0)), 4) as weighted_opp_rating_from_plays, \"nfl_plays\".\"year\" from \"nfl_plays\" inner join \"player_gamelogs\" as \"pg\" on \"nfl_plays\".\"esbid\" = \"pg\".\"esbid\" and \"nfl_plays\".\"off\" = \"pg\".\"tm\" where not \"play_type\" = 'NOPL' and (\"trg_pid\" is not null) and \"nfl_plays\".\"year\" in (2018, 2019, 2020, 2021, 2022, 2023) and \"nfl_plays\".\"seas_type\" in ('REG') group by \"pg\".\"pid\", \"nfl_plays\".\"year\") select \"player\".\"pid\", player.fname, player.lname, \"tbc0f47cfe59a1398fb0e9c78eb43bba3\".\"points_per_game\" AS \"points_per_game_from_seasonlogs_0\", \"t5dbd24996205072a3cc6d6a4c4294224\".\"weighted_opp_rating_from_plays\" AS \"weighted_opp_rating_from_plays_0\", \"player_seasonlogs\".\"espn_overall_score\" AS \"espn_overall_score_0\", \"t1fe762ef2bba428f1622c4bb75e9d735\".\"v\" AS \"player_keeptradecut_value_0\", CASE WHEN player.dob IS NULL OR player.dob = '0000-00-00' THEN NULL ELSE ROUND(EXTRACT(YEAR FROM AGE(opening_days.opening_day, TO_DATE(player.dob, 'YYYY-MM-DD'))) + (EXTRACT(MONTH FROM AGE(opening_days.opening_day, TO_DATE(player.dob, 'YYYY-MM-DD'))) / 12.0) + (EXTRACT(DAY FROM AGE(opening_days.opening_day, TO_DATE(player.dob, 'YYYY-MM-DD'))) / 365.25), 2) END as age_0, \"player_years\".\"year\", \"player\".\"pos\" from \"player\" inner join \"player_years\" on \"player_years\".\"pid\" = \"player\".\"pid\" left join \"scoring_format_player_seasonlogs\" as \"tbc0f47cfe59a1398fb0e9c78eb43bba3\" on \"tbc0f47cfe59a1398fb0e9c78eb43bba3\".\"pid\" = \"player\".\"pid\" and tbc0f47cfe59a1398fb0e9c78eb43bba3.year = player_years.year and tbc0f47cfe59a1398fb0e9c78eb43bba3.year IN (2023,2022,2021,2020,2019,2018,2017) and tbc0f47cfe59a1398fb0e9c78eb43bba3.scoring_format_hash = 'ad64bf40cdfec0a1ebdf66453fa57687832f7556f3870251c044d5d270fc089e' left join \"t5dbd24996205072a3cc6d6a4c4294224\" on \"t5dbd24996205072a3cc6d6a4c4294224\".\"pid\" = \"player\".\"pid\" and t5dbd24996205072a3cc6d6a4c4294224.year = player_years.year and t5dbd24996205072a3cc6d6a4c4294224.year IN (2018,2019,2020,2021,2022,2023) left join \"player_seasonlogs\" on \"player_seasonlogs\".\"pid\" = \"player\".\"pid\" and player_seasonlogs.year = player_years.year and \"player_seasonlogs\".\"seas_type\" = 'REG' left join \"opening_days\" on \"opening_days\".\"year\" = \"player_years\".\"year\" left join \"keeptradecut_rankings\" as \"t1fe762ef2bba428f1622c4bb75e9d735\" on \"t1fe762ef2bba428f1622c4bb75e9d735\".\"pid\" = \"player\".\"pid\" and \"t1fe762ef2bba428f1622c4bb75e9d735\".\"qb\" = 2 and \"t1fe762ef2bba428f1622c4bb75e9d735\".\"type\" = 1 and \"t1fe762ef2bba428f1622c4bb75e9d735\".\"d\" = EXTRACT(EPOCH FROM (date_trunc('day', opening_days.opening_day) + interval '0 year'))::integer and opening_days.year = (player_years.year) where player.pos IN ('WR') group by player.fname, player.lname, \"tbc0f47cfe59a1398fb0e9c78eb43bba3\".\"points_per_game\", \"t5dbd24996205072a3cc6d6a4c4294224\".\"weighted_opp_rating_from_plays\", \"player_seasonlogs\".\"espn_overall_score\", \"t1fe762ef2bba428f1622c4bb75e9d735\".\"v\", player.dob, opening_days.opening_day, \"player_years\".\"year\", \"player\".\"pid\", \"player\".\"lname\", \"player\".\"fname\", \"player\".\"pos\" order by 4 DESC NULLS LAST, \"player\".\"pid\" asc limit 500",
  "tags": [
    "player",
    "plays",
    "filters",
    "parameters",
    "sorting",
    "cte",
    "joins"
  ],
  "timeout_ms": 40000
}
