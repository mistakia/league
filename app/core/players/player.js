import { Record, List, Map } from 'immutable'

import { constants } from '@common'

export const Player = new Record({
  player: null,
  name: null,
  pname: null,
  fname: null,
  lname: null,
  pos1: null,
  height: null,
  weight: null,
  dob: null,
  forty: null,
  bench: null,
  vertical: null,
  broad: null,
  shuttle: null,
  cone: null,
  arm: null,
  hand: null,
  dpos: null,
  college: null,
  college_division: null,
  draft_year: null,
  team: null,
  depth_position: null,
  depth_number: null,
  jersey: null,
  projection: new Map(),
  stats: new Map(constants.createFullStats()),
  points: new Map(),
  values: new Map(),
  vorp: new Map(),
  projections: new List(),
  lineups: new Map(),
  value: null,
  slot: null,
  type: null,
  tid: null,
  inflation: null,
  inflationSeason: null,
  status: null,
  injuryStatus: null,
  injuyrBodyPart: null,
  projWks: null,
  nflid: null,
  gsisid: null,
  esbid: null,
  gsispid: null,
  gamestatus: null,
  practice: new List()
})

export function createPlayer ({
  player,
  fname,
  lname,
  pname,
  pos1,
  height,
  weight,
  dob,
  forty,
  bench,
  vertical,
  broad,
  shuttle,
  cone,
  arm,
  hand,
  dpos,
  col,
  dv,
  start,
  cteam,
  posd,
  jnum,
  dcp,
  projection,
  points,
  values,
  vorp,
  projections,
  value,
  slot,
  type,
  tid,
  status,
  injuryStatus,
  injuryBodyPart,
  nflid,
  gsisid,
  esbid,
  gsispid,
  gamestatus,
  practice
}) {
  return new Player({
    player,
    name: `${fname} ${lname}`,
    pname,
    fname,
    lname,
    pos1,
    height,
    weight,
    dob,
    forty,
    bench,
    vertical,
    broad,
    shuttle,
    cone,
    arm,
    hand,
    dpos,
    college: col,
    college_division: dv,
    draft_year: start,
    team: cteam,
    depth_position: posd,
    jersey: jnum,
    depth_number: dcp,
    projection: new Map(projection),
    points: new Map(points),
    values: new Map(values),
    vorp: new Map(vorp),
    projections: new List(projections),
    value,
    slot,
    type,
    tid,
    status,
    injuryStatus,
    injuryBodyPart,
    nflid,
    gsisid,
    esbid,
    gsispid,
    gamestatus,
    practice: new List(practice)
  })
}
